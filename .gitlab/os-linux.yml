# Linux-specific builder configurations and build commands

## Base images

.linux:
    variables:
        GIT_CLONE_PATH: $CI_BUILDS_DIR/gitlab-kitware-sciviz-ci
        GIT_SUBMODULE_STRATEGY: none

.ubuntu2004:
    extends: .linux
    image: "kitware/kwiver:ci-ubuntu20_04-20240327"

.ubuntu2004_arrows:
    extends:
        - .ubuntu2004

    variables:
        CMAKE_CONFIGURATION: ubuntu2004_ceres_dbow2_ffmpeg_gdal_kpf_opencv_pdal_proj_python_qt_uuid_vtk_vxl

.manylinux2014_x86_64:
    extends: .linux
    image: "kitware/kwiver:ci-python-20240405"

.wheel_linux38_x86_64:
    extends: .manylinux2014_x86_64

    variables:
        CMAKE_CONFIGURATION: wheel_linux38_x86_64_ceres_dbow2_ffmpeg_gdal_kpf_opencv_pdal_proj_python_uuid_vtk_vxl
        PYTHON_PREFIX: /opt/python/cp38-cp38

.linux_builder_tags:
    tags:
        - build
        - docker
        - linux-x86_64
        - kwiver

# testing cuda requires cuda-capable runner
.linux_tester_tags:
    tags:
        - docker
        - linux-x86_64
        - cuda-rt
        - kwiver

## Linux-specific scripts

.before_script_linux: &before_script_linux
    - .gitlab/ci/cmake.sh
    - .gitlab/ci/ninja.sh
    - export PATH=$PWD/.gitlab:$PWD/.gitlab/cmake/bin:$PATH
    - cmake --version
    - ninja --version

.before_script_linux_venv: &before_script_linux_venv
    - python3 -m venv build/ci-venv
    - . build/ci-venv/bin/activate
    - pip install -r ./python/requirements_dev.txt

.before_script_linux_wheel_venv: &before_script_linux_wheel_venv
    - "$PYTHON_PREFIX/bin/python -m venv build/ci-venv"
    - . build/ci-venv/bin/activate
    - pip install -r ./python/requirements_dev.txt
    - pip install scikit-build auditwheel

.cmake_build_linux:
    stage: build
    extends: .warning_policy

    script:
        - *before_script_linux
        - *before_script_linux_venv
        - .gitlab/ci/sccache.sh
        - sccache --start-server
        - sccache --show-stats
        - $LAUNCHER ctest -VV -S .gitlab/ci/ctest_configure.cmake
        - $LAUNCHER ctest -VV -S .gitlab/ci/ctest_build.cmake &> $GIT_CLONE_PATH/compile_output.log
        - sccache --show-stats
        - exec .gitlab/ci/check_warnings.sh .

    interruptible: true

.cmake_build_wheel_linux:
    stage: build
    extends: .warning_policy

    script:
        - *before_script_linux
        - *before_script_linux_wheel_venv
        - .gitlab/ci/sccache.sh
        - sccache --start-server
        - sccache --show-stats
        - "python setup.py bdist_wheel -- -C $GIT_CLONE_PATH/.gitlab/ci/configure_wheel.cmake > $GIT_CLONE_PATH/skbuild_output.log"
        - "LD_LIBRARY_PATH=/opt/fletch/lib/ auditwheel show dist/*.whl > $GIT_CLONE_PATH/wheel_output.log"
        - "LD_LIBRARY_PATH=/opt/fletch/lib/ auditwheel repair $WHEEL_EXCLUSIONS dist/*.whl >> $GIT_CLONE_PATH/wheel_output.log"
        - mv -v dist/ dist-orig/
        - mv -v wheelhouse/ dist/
        - sccache --show-stats

    interruptible: true

.cmake_test_linux:
    stage: test

    script:
        - *before_script_linux
        - . build/ci-venv/bin/activate
        - . build/setup_KWIVER.sh
        - ctest -V --output-on-failure -S .gitlab/ci/ctest_test.cmake

    interruptible: true
